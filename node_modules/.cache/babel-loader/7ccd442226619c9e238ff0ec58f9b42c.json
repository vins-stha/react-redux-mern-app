{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laptop\\\\Desktop\\\\udemy\\\\node\\\\MERN\\\\first\\\\frontend\\\\src\\\\components\\\\redux-crud\\\\todoLists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoLists() {\n  _s();\n\n  const selector = useSelector(store => store);\n  const dispatch = useDispatch();\n  const taskLists = selector.tasks;\n  const [display, setDisplay] = useState('none');\n  const [task, setTask] = useState('');\n\n  function handleEdit(task, key) {\n    setDisplay('');\n  }\n\n  function deleteItem(task, key) {\n    console.log('delete=>', task, key);\n    dispatch({\n      type: \"DELETE_TASK\",\n      payload: task\n    });\n  }\n\n  function updateItem() {\n    setDisplay('none');\n    console.log('Tasks===', task);\n  }\n\n  const item = taskLists.map((task, key) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"taskname\",\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control editBox\",\n          style: {\n            display: display\n          },\n          value: task,\n          onChange: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary updateButton\",\n          style: {\n            display: display\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item_controller\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          style: {\n            marginRight: \"0.5rem\"\n          },\n          onClick: e => {\n            deleteItem(task, key);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: e => {\n            handleEdit(task, key);\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskList_container\",\n    children: item\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoLists, \"UMXOBSvjuMUxA+RrnaDwo/nT5SY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TodoLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoLists\");","map":{"version":3,"sources":["C:/Users/Laptop/Desktop/udemy/node/MERN/first/frontend/src/components/redux-crud/todoLists.js"],"names":["React","useState","useDispatch","useSelector","TodoLists","selector","store","dispatch","taskLists","tasks","display","setDisplay","task","setTask","handleEdit","key","deleteItem","console","log","type","payload","updateItem","item","map","e","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAV,CAA5B;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGH,QAAQ,CAACI,KAA3B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;;AAEA,WAASa,UAAT,CAAoBF,IAApB,EAAyBG,GAAzB,EACA;AACIJ,IAAAA,UAAU,CAAC,EAAD,CAAV;AAEH;;AACD,WAASK,UAAT,CAAoBJ,IAApB,EAAyBG,GAAzB,EACA;AACIE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBN,IAAvB,EAA4BG,GAA5B;AACAR,IAAAA,QAAQ,CAAC;AAACY,MAAAA,IAAI,EAAC,aAAN;AAAoBC,MAAAA,OAAO,EAACR;AAA5B,KAAD,CAAR;AACH;;AACD,WAASS,UAAT,GACA;AACIV,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,IAAxB;AACH;;AAED,QAAMU,IAAI,GAAGd,SAAS,CAACe,GAAV,CAAc,CAACX,IAAD,EAAOG,GAAP,KAAe;AACtC,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA,oBAA0BH;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,sBAA7B;AAAoD,UAAA,KAAK,EAAE;AAACF,YAAAA,OAAO,EAACA;AAAT,WAA3D;AACQ,UAAA,KAAK,EAAEE,IADf;AACqB,UAAA,QAAQ,EAAIY;AADjC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAQ,UAAA,SAAS,EAAC,8BAAlB;AAAiD,UAAA,KAAK,EAAE;AAACd,YAAAA,OAAO,EAACA;AAAT,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,KAAK,EAAE;AAACe,YAAAA,WAAW,EAAC;AAAb,WAA1C;AAAiE,UAAA,OAAO,EAAGD,CAAD,IAAK;AAACR,YAAAA,UAAU,CAACJ,IAAD,EAAMG,GAAN,CAAV;AAAqB,WAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAGS,CAAD,IAAK;AAACV,YAAAA,UAAU,CAACF,IAAD,EAAMG,GAAN,CAAV;AAAqB,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH,GAnBY,CAAb;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,cAGKO;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GApDuBlB,S;UACHD,W,EACAD,W;;;KAFGE,S","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport default function TodoLists() {\r\n    const selector = useSelector(store => store)\r\n    const dispatch = useDispatch()\r\n    const taskLists = selector.tasks\r\n    const [display, setDisplay] = useState('none')\r\n    const [task,setTask] = useState('')\r\n\r\n    function handleEdit(task,key)\r\n    {\r\n        setDisplay('')\r\n        \r\n    }\r\n    function deleteItem(task,key)\r\n    {\r\n        console.log('delete=>',task,key)\r\n        dispatch({type:\"DELETE_TASK\",payload:task})\r\n    }\r\n    function updateItem()\r\n    {\r\n        setDisplay('none')\r\n        console.log('Tasks===', task)\r\n    }\r\n\r\n    const item = taskLists.map((task, key) => {\r\n        return (\r\n            <div className=\"item_container\" >\r\n                <div className=\"item\" >\r\n                    <h5 className=\"taskname\">{task}</h5>\r\n                    <input type=\"text\" className=\"form-control editBox\" style={{display:display}}\r\n                            value={task} onChange={((e))}\r\n                    ></input>\r\n                    <button className=\"btn btn-primary updateButton\" style={{display:display}}>Update</button>\r\n                  \r\n                </div>\r\n                <div className=\"item_controller\">\r\n                    <button className=\"btn btn-danger\" style={{marginRight:\"0.5rem\"}}onClick={(e)=>{deleteItem(task,key)}}>Delete</button>\r\n                    <button className=\"btn btn-primary\" onClick={(e)=>{handleEdit(task,key)}}>Edit</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"taskList_container\">\r\n           \r\n\r\n            {item}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}