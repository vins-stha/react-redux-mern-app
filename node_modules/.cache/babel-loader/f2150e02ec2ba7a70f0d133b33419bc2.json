{"ast":null,"code":"import _slicedToArray from\"C:/Users/Laptop/Desktop/udemy/node/MERN/react-mern-redux/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function TodoLists(){var selector=useSelector(function(store){return store;});var dispatch=useDispatch();var taskLists=selector.tasks;var _useState=useState('none'),_useState2=_slicedToArray(_useState,2),display=_useState2[0],setDisplay=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),updatedTask=_useState4[0],setUpdatedTask=_useState4[1];function handleEdit(task,key){setDisplay('inline');}function deleteItem(task,key){console.log('delete=>',task,key);dispatch({type:\"DELETE_TASK\",payload:task});}function updateItem(task){setDisplay('none');console.log('old = ',task,'new',updatedTask);dispatch({type:\"UPDATE_TASK\",payload:{old:task,updated:updatedTask}});}var item=taskLists.map(function(task,key){return/*#__PURE__*/_jsxs(\"div\",{className:\"item_container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"taskname\",children:task}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control editBox\",style:{display:display},onChange:function onChange(e){setUpdatedTask(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary updateButton\",style:{display:display},onClick:function onClick(e){updateItem(task);},children:\"Update\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item_controller\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",style:{marginRight:\"0.5rem\"},onClick:function onClick(e){deleteItem(task,key);},children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:function onClick(e){handleEdit(task,key);},children:\"Edit\"})]})]});});return/*#__PURE__*/_jsx(\"div\",{className:\"taskList_container\",children:item});}","map":{"version":3,"sources":["C:/Users/Laptop/Desktop/udemy/node/MERN/react-mern-redux/frontend/src/components/redux-crud/todoLists.js"],"names":["React","useState","useDispatch","useSelector","TodoLists","selector","store","dispatch","taskLists","tasks","display","setDisplay","updatedTask","setUpdatedTask","handleEdit","task","key","deleteItem","console","log","type","payload","updateItem","old","updated","item","map","e","target","value","marginRight"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,C,wFAEA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAChC,GAAMC,CAAAA,QAAQ,CAAGF,WAAW,CAAC,SAAAG,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAA5B,CACA,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,SAAS,CAAGH,QAAQ,CAACI,KAA3B,CACA,cAA8BR,QAAQ,CAAC,MAAD,CAAtC,wCAAOS,OAAP,eAAgBC,UAAhB,eACA,eAAqCV,QAAQ,CAAC,EAAD,CAA7C,yCAAOW,WAAP,eAAmBC,cAAnB,eAEA,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAAyBC,GAAzB,CACA,CACIL,UAAU,CAAC,QAAD,CAAV,CAEH,CACD,QAASM,CAAAA,UAAT,CAAoBF,IAApB,CAAyBC,GAAzB,CACA,CACIE,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAuBJ,IAAvB,CAA4BC,GAA5B,EACAT,QAAQ,CAAC,CAACa,IAAI,CAAC,aAAN,CAAoBC,OAAO,CAACN,IAA5B,CAAD,CAAR,CACH,CACD,QAASO,CAAAA,UAAT,CAAoBP,IAApB,CACA,CACIJ,UAAU,CAAC,MAAD,CAAV,CACAO,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBJ,IAAtB,CAA2B,KAA3B,CAAiCH,WAAjC,EACAL,QAAQ,CAAC,CAACa,IAAI,CAAC,aAAN,CAAqBC,OAAO,CAAC,CAACE,GAAG,CAACR,IAAL,CAAWS,OAAO,CAACZ,WAAnB,CAA7B,CAAD,CAAR,CACH,CAED,GAAMa,CAAAA,IAAI,CAAGjB,SAAS,CAACkB,GAAV,CAAc,SAACX,IAAD,CAAOC,GAAP,CAAe,CACtC,mBACI,aAAK,SAAS,CAAC,gBAAf,wBACI,aAAK,SAAS,CAAC,MAAf,wBACI,WAAI,SAAS,CAAC,UAAd,UAA0BD,IAA1B,EADJ,cAGI,cAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,sBAA7B,CAAoD,KAAK,CAAE,CAACL,OAAO,CAACA,OAAT,CAA3D,CACS,QAAQ,CAAE,kBAACiB,CAAD,CAAK,CAACd,cAAc,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CAA+B,CADxD,EAHJ,cAMI,eAAQ,SAAS,CAAC,8BAAlB,CAAiD,KAAK,CAAE,CAACnB,OAAO,CAACA,OAAT,CAAxD,CAA2E,OAAO,CAAE,iBAACiB,CAAD,CAAK,CAACL,UAAU,CAACP,IAAD,CAAV,CAAiB,CAA3G,oBANJ,GADJ,cAUI,aAAK,SAAS,CAAC,iBAAf,wBACI,eAAQ,SAAS,CAAC,gBAAlB,CAAmC,KAAK,CAAE,CAACe,WAAW,CAAC,QAAb,CAA1C,CAAiE,OAAO,CAAE,iBAACH,CAAD,CAAK,CAACV,UAAU,CAACF,IAAD,CAAMC,GAAN,CAAV,CAAqB,CAArG,oBADJ,cAEI,eAAQ,SAAS,CAAC,iBAAlB,CAAoC,OAAO,CAAE,iBAACW,CAAD,CAAK,CAACb,UAAU,CAACC,IAAD,CAAMC,GAAN,CAAV,CAAqB,CAAxE,kBAFJ,GAVJ,GADJ,CAmBH,CApBY,CAAb,CAqBA,mBACI,YAAK,SAAS,CAAC,oBAAf,UAGKS,IAHL,EADJ,CASH","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport default function TodoLists() {\r\n    const selector = useSelector(store => store)\r\n    const dispatch = useDispatch()\r\n    const taskLists = selector.tasks\r\n    const [display, setDisplay] = useState('none')\r\n    const [updatedTask,setUpdatedTask] = useState('')\r\n\r\n    function handleEdit(task,key)\r\n    {\r\n        setDisplay('inline')\r\n        \r\n    }\r\n    function deleteItem(task,key)\r\n    {\r\n        console.log('delete=>',task,key)\r\n        dispatch({type:\"DELETE_TASK\",payload:task})\r\n    }\r\n    function updateItem(task)\r\n    {\r\n        setDisplay('none')\r\n        console.log('old = ', task,'new',updatedTask)\r\n        dispatch({type:\"UPDATE_TASK\", payload:{old:task, updated:updatedTask}})\r\n    }\r\n\r\n    const item = taskLists.map((task, key) => {\r\n        return (\r\n            <div className=\"item_container\" >\r\n                <div className=\"item\" >\r\n                    <h5 className=\"taskname\">{task}</h5>\r\n\r\n                    <input type=\"text\" className=\"form-control editBox\" style={{display:display}}\r\n                             onChange={(e)=>{setUpdatedTask(e.target.value)}}></input>\r\n\r\n                    <button className=\"btn btn-primary updateButton\" style={{display:display}} onClick={(e)=>{updateItem(task)}}>Update</button>\r\n                  \r\n                </div>\r\n                <div className=\"item_controller\">\r\n                    <button className=\"btn btn-danger\" style={{marginRight:\"0.5rem\"}}onClick={(e)=>{deleteItem(task,key)}}>Delete</button>\r\n                    <button className=\"btn btn-primary\" onClick={(e)=>{handleEdit(task,key)}}>Edit</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"taskList_container\">\r\n           \r\n\r\n            {item}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}